openapi: 3.0.0
info:
  title: UISP API - Sites
  version: "1.5.0"
  description: >
    Този документ съдържа всички endpoints, свързани със сайтовете (Sites) от UISP API.
servers:
  - url: http://{host}/nms/api/v2.1
    description: Основен сървър
    variables:
      host:
        default: localhost
paths:
  /sites:
    get:
      summary: "List of sites in UISP. Only some combinations of query parameters are valid."
      tags:
        - Sites
      parameters:
        - name: id
          in: query
          description: "Return only sites with these IDs."
          required: false
          schema:
            type: array
            items:
              type: string
              example: f7ac9cad-ea28-4390-93c8-7add010e8ee3
          style: form
          explode: true
        - name: ip
          in: query
          description: "Return only sites that contain a device with this IP address."
          required: false
          schema:
            type: string
          x-format:
            ip:
              cidr: "optional"
        - name: deviceId
          in: query
          description: "Return site containing device with this ID."
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: "Return sites with this type."
          required: false
          schema:
            type: string
            enum:
              - site
              - endpoint
              - client
              - subscriber
        - name: ucrm
          in: query
          description: >
            If true, returns only sites that are bound with CRM.
            If false, returns only sites that are not bound with CRM.
            Can be used only with "type" parameter.
          required: false
          schema:
            type: boolean
        - name: ucrmDetails
          in: query
          description: "Include CRM client and service details. Can be used with any other parameter."
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: "Create new site."
      tags:
        - Sites
      requestBody:
        description: "Site object that needs to be added."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSite'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sites/search:
    get:
      summary: "Search sites based on name, address, MAC address or IP address."
      tags:
        - Sites
      parameters:
        - name: query
          in: query
          description: "Text to search for in site."
          required: false
          schema:
            type: string
        - name: count
          in: query
          description: "Results per page."
          required: true
          schema:
            type: number
            minimum: 1
        - name: page
          in: query
          description: "Results page."
          required: true
          schema:
            type: number
            minimum: 1
        - name: type
          in: query
          description: "Type of site to search."
          required: false
          schema:
            type: string
            enum:
              - site
              - endpoint
              - client
              - subscriber
        - name: ucrm
          in: query
          description: "Search sites bound with UCRM."
          required: false
          schema:
            type: boolean
        - name: latitude
          in: query
          description: "Order sites by distance from this latitude."
          required: false
          schema:
            type: number
        - name: longitude
          in: query
          description: "Order sites by distance from this longitude."
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitesList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sites/traffic:
    get:
      summary: "Get traffic from each site between two points in time."
      tags:
        - Sites
        - Traffic
      parameters:
        - name: from
          in: query
          description: "Timestamp of the beginning of the interval in milliseconds."
          required: true
          schema:
            type: number
        - name: to
          in: query
          description: "Timestamp of the end of the interval in milliseconds."
          required: true
          schema:
            type: number
        - name: granularity
          in: query
          description: "Granularity of the traffic stats."
          required: true
          schema:
            type: string
            enum:
              - fiveMinutes
              - oneHour
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteTrafficList'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sites/{id}:
    get:
      summary: "Return a site's detail."
      tags:
        - Sites
      parameters:
        - name: id
          in: path
          description: "Site ID."
          required: true
          schema:
            type: string
          x-format:
            guid: true
        - name: ucrmDetails
          in: query
          description: "Include CRM client and service details."
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: "Update site."
      tags:
        - Sites
      parameters:
        - name: id
          in: path
          description: "Site ID."
          required: true
          schema:
            type: string
          x-format:
            guid: true
      requestBody:
        description: "Site update payload."
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUpdate'
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: "Delete site. It's possible to call only on empty site."
      tags:
        - Sites
      parameters:
        - name: id
          in: path
          description: "Site ID."
          required: true
          schema:
            type: string
          x-format:
            guid: true
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    SitesList:
      type: object
      properties:
        sites:
          type: array
          items:
            $ref: '#/components/schemas/Site'
      example:
        sites:
          - id: "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
            type: "site"
            name: "Building B"
            status: "active"
            parentId: "parent-site-id"
    CreateSite:
      type: object
      properties:
        name:
          type: string
          description: "Име на сайта."
          example: "Building B"
        type:
          type: string
          description: "Тип на сайта."
          enum: [site, endpoint, client, subscriber]
        address:
          type: string
          description: "Адрес на сайта."
          example: "123 Main St, City"
        latitude:
          type: number
          description: "Ширина."
          example: 42.6977
        longitude:
          type: number
          description: "Дължина."
          example: 23.3219
      required:
        - name
        - type
    Site:
      type: object
      properties:
        id:
          type: string
          description: "Идентификатор на сайта."
          example: "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        type:
          type: string
          description: "Тип на сайта."
          enum: [site, endpoint, client, subscriber]
        name:
          type: string
          description: "Име на сайта."
          example: "Building B"
        status:
          type: string
          description: "Статус на сайта."
          enum: [active, disconnected, inactive, unknown]
        parentId:
          type: string
          description: "Идентификатор на родителския сайт."
          example: "parent-site-id"
        address:
          type: string
          description: "Адрес на сайта."
          example: "123 Main St, City"
        latitude:
          type: number
          description: "Ширина."
          example: 42.6977
        longitude:
          type: number
          description: "Дължина."
          example: 23.3219
      required:
        - id
        - type
        - name
        - status
        - parentId
    SiteUpdate:
      type: object
      properties:
        name:
          type: string
          description: "Ново име на сайта."
          example: "Updated Building B"
        address:
          type: string
          description: "Нов адрес."
          example: "456 New Ave, City"
        latitude:
          type: number
          description: "Нова ширина."
          example: 42.7000
        longitude:
          type: number
          description: "Нова дължина."
          example: 23.3220
        status:
          type: string
          description: "Нов статус."
          enum: [active, disconnected, inactive, unknown]
      required:
        - name
        - status
    SiteTrafficList:
      type: object
      properties:
        siteId:
          type: string
          description: "Идентификатор на сайта."
          example: "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        traffic:
          type: array
          description: "Списък с трафик данни за определени интервали."
          items:
            type: object
            properties:
              timestamp:
                type: number
                description: "Unix timestamp в милисекунди."
                example: 1617184800000
              bytesIn:
                type: number
                description: "Приети байтове."
                example: 102400
              bytesOut:
                type: number
                description: "Изпратени байтове."
                example: 204800
      required:
        - siteId
        - traffic
    Error:
      type: object
      properties:
        message:
          type: string
          description: "Описание на грешката."
          example: "An error occurred."
    Status:
      type: object
      properties:
        status:
          type: string
          description: "Статус на операцията."
          example: "success"
